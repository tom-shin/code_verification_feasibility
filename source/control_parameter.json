{
    "Version": "Feasibility for Code Verification 0.3.0 (made by tom.shin)",
    "select_llm": "openai",
    "llm_company": {
        "openai": {
            "key": [
                "sk-",
                "BucaNVm1ibsxPUnxvWq8T3BlbkFJRGWPgBcKMtn1aorR2eYX"
            ],
            "llm_models": [
                "gpt-4o-mini",
                "gpt-4-turbo",
                "gpt-4",
                "gpt-3.5-turbo"
            ],
            "timeout": "300",
            "max_limit_token": 5000
        },
        "reserved": {
            "key": [
                "xxx-",
                "xxxxxxxxxx"
            ],
            "llm_models": [
                "xxx",
                "xxx"
            ],
            "timeout": "300",
            "max_limit_token": 1000
        }
    },
    "filter": {
        "include": [
            ".py",
            ".c",
            ".cpp"
        ],
        "exclude": [
            ".git",
            ".idea",
            "pycache",
            ".zip",
            ".pdf",
            ".xlsx",
            ".bin",
            ".bat",
            ".onnx",
            "tflite",
            "caffe",
            "tool",
            "designer",
            "Gen-6"
        ]
    },
    "prompt": {
        "system": [
            "You are a top-level expert with at least 30 years of experience in programming languages."
        ],
        "user": [
            "First, as an expert, perform a static analysis of the code based on classes or functions to identify issues or bugs, and suggest improvements for the code. \nSecond, assess the code quality using metrics like reliability and F1 score, providing a numerical score (out of 100) with a brief explanation. \nLastly, include the file name followed by the function or class name at the beginning of your response, and then provide the analysis details below."
        ]
    },
    "example_content": [
        "[error_example.c]\n\nint main() {\nint a = 10;\nfloat b = 20;\nfloat *p = None\np = &a\nc = *p\nprint(a+c)\n"
    ]
}