{
    "Version": "Feasibility for Code Verification 0.2.0 (made by tom.shin)",
    "openai_key": {
        "key": [
            "sk-",
            "BucaNVm1ibsxPUnxvWq8T3BlbkFJRGWPgBcKMtn1aorR2eYX"
        ],
        "timeout": "300"
    },
    "keyword": {
        "exclusive_dir": [
            ".git",
            ".idea",
            "pycache",
            ".zip"
        ],
        "llm_models": [
            "gpt-4o-mini",
            "gpt-4-turbo",
            "gpt-4",
            "gpt-3.5-turbo"
        ],
        "pre_prompt": [
            "당신은 C언어 코드 전문가야. 최소 경력이 20년 이상된. 내가 전달한 코드는 C 코드인데 코드 검사 해 주고 버그 찾아 주고 수정 해 줘\n"
        ],
        "example_content": [
            "[error_example.c]\n\nint main() {\nint a = 10;\nfloat b = 20;\nfloat *p = None\np = &a\nc = *p\nprint(a+c)\n"
        ],
        "real_prompt": [
            "You are an expert in code evaluation.\nThe above is a summary of each part of the project, including file names and paths. Based on this, analyze the overall structure, relationships between files, code quality, and identify any issues or bugs in the code. Also, suggest improvements and provide example code improvements. and assess its quality using measurable metrics such as reliability, F1 score, or other relevant code quality indicators. Provide a numerical score along with a detailed explanation of the reasoning behind your assessment, including the logic used to determine the score.\n\nPlease provide the analysis and improvement suggestions in Korean\n"
        ]
    }
}